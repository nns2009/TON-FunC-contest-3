// automatically generated from `stdlib.fc` `3.fc` 
PROGRAM{
  DECLPROC next_char
  DECLPROC expression
  DECLPROC item
  DECLPROC group
  DECLPROC print_int
  DECLPROC recv_internal
  next_char PROCINLINE:<{
    DUP
    SBITS
    7 GTINT
    IF:<{
      8 LDU
    }>ELSE<{
      DUP
      SREMPTY
      IFJMP:<{
        0 PUSHINT
        SWAP
      }>
      PLDREF
      CTOS
      8 LDU
    }>
  }>
  expression PROCINLINE:<{
    group INLINECALLDICT
    WHILE:<{
      OVER
      43 EQINT
      s2 PUSH
      45 EQINT
      OR
    }>DO<{
      SWAP
      43 EQINT
      IF:<{
        next_char INLINECALLDICT
        group INLINECALLDICT
        2SWAP
        ADD
      }>ELSE<{
        next_char INLINECALLDICT
        group INLINECALLDICT
        2SWAP
        SUB
      }>
      -ROT
    }>
  }>
  item PROCINLINE:<{
    OVER
    40 EQINT
    IF:<{
      NIP
      next_char INLINECALLDICT
      expression INLINECALLDICT
      NIP
      next_char INLINECALLDICT
    }>ELSE<{
      0 PUSHINT
      WHILE:<{
        s2 PUSH
        47 GTINT
        s3 PUSH
        58 LESSINT
        AND
      }>DO<{
        10 MULCONST
        s1 s2 XCHG
        ADD
        -48 ADDCONST
        SWAP
        next_char INLINECALLDICT
        ROT
      }>
      -ROT
    }>
  }>
  group PROCINLINE:<{
    item INLINECALLDICT
    WHILE:<{
      OVER
      42 EQINT
      s2 PUSH
      47 EQINT
      OR
    }>DO<{
      SWAP
      42 EQINT
      IF:<{
        next_char INLINECALLDICT
        item INLINECALLDICT
        2SWAP
        MUL
      }>ELSE<{
        next_char INLINECALLDICT
        item INLINECALLDICT
        2SWAP
        DIV
      }>
      -ROT
    }>
  }>
  print_int PROCINLINE:<{
    DUP
    0 EQINT
    OVER
    0 LESSINT
    IF:<{
      45 PUSHINT
      s0 s3 XCHG2
      8 STU
      SWAP
      NEGATE
      ROT
    }>
    NIL
    SWAP
    IF:<{
      NIP
      0 PUSHINT
      TPUSH
    }>ELSE<{
      WHILE:<{
        OVER
        0 GTINT
      }>DO<{
        SWAP
        10 PUSHINT
        DIVMOD
        s1 s2 XCHG
        TPUSH
      }>
      NIP
    }>
    DUP
    TLEN
    REPEAT:<{
      TPOP
      48 ADDCONST
      ROT
      8 STU
      SWAP
    }>
    DROP
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 PUSHINT
    SDSKIPFIRST
    LDMSGADDR
    DROP
    SWAP
    32 PUSHINT
    SDSKIPFIRST
    next_char INLINECALLDICT
    expression INLINECALLDICT
    2DROP
    0 PUSHINT
    DUP
    24 PUSHINT
    NEWC
    6 STU
    s0 s4 XCHG2
    STSLICER
    OVER
    STGRAMS
    s1 s3 XCHG
    107 STU
    s1 s2 XCHG
    32 STU
    SWAP
    print_int INLINECALLDICT
    ENDC
    64 PUSHINT
    SENDRAWMSG
  }>
}END>c
